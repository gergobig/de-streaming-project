version: '3'

services:
  db:
    image: postgres:14.8
    hostname: db
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: gbig
      POSTGRES_PASSWORD: gbig
      POSTGRES_DB: postgres
    volumes:
      - ./postgres/tables/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - 5432:5432
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    container_name: zookeper
    ports:
      - 2181:2181
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.4
    container_name: kafka
    ports:
      - 9093:9093
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      # KRaft settings
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
    depends_on:
      - zookeeper
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  generator:
    build:
        context: ./container/fake_data_generator/
    command: python /srv/fake_data_generator/generate.py
    volumes:
        - ./fake_data_generator:/srv/fake_data_generator
    container_name: generator
    restart: on-failure
    depends_on:
        - db
        - kafka
